/*------------------------------------------------------------------------------
//   This code was generated by template ffi_wrapper.go.tmpl.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "ffi_wrapper.go.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/

function CallAudioPlayAudio(
	path GdString,
	)  {
	arg0 := (C.GDExtensionSpxAudioPlayAudio)(api.SpxAudioPlayAudio)
	arg1GdString = (C.GdString)(path)
	
	C.cgo_callfn_GDExtensionSpxAudioPlayAudio(arg0,arg1GdString,)
	
}
function CallAudioSetAudioVolume(
	volume GdFloat,
	)  {
	arg0 := (C.GDExtensionSpxAudioSetAudioVolume)(api.SpxAudioSetAudioVolume)
	arg1GdFloat = (C.GdFloat)(volume)
	
	C.cgo_callfn_GDExtensionSpxAudioSetAudioVolume(arg0,arg1GdFloat,)
	
}
function CallAudioGetAudioVolume(
	) GdFloat {
	arg0 := (C.GDExtensionSpxAudioGetAudioVolume)(api.SpxAudioGetAudioVolume)
	var ret_val C.GdFloat 
	C.cgo_callfn_GDExtensionSpxAudioGetAudioVolume(arg0, &ret_val)
	return (GdFloat)(ret_val)
}
function CallAudioIsMusicPlaying(
	) GdBool {
	arg0 := (C.GDExtensionSpxAudioIsMusicPlaying)(api.SpxAudioIsMusicPlaying)
	var ret_val C.GdBool 
	C.cgo_callfn_GDExtensionSpxAudioIsMusicPlaying(arg0, &ret_val)
	return (GdBool)(ret_val)
}
function CallAudioPlayMusic(
	path GdString,
	)  {
	arg0 := (C.GDExtensionSpxAudioPlayMusic)(api.SpxAudioPlayMusic)
	arg1GdString = (C.GdString)(path)
	
	C.cgo_callfn_GDExtensionSpxAudioPlayMusic(arg0,arg1GdString,)
	
}
function CallAudioSetMusicVolume(
	volume GdFloat,
	)  {
	arg0 := (C.GDExtensionSpxAudioSetMusicVolume)(api.SpxAudioSetMusicVolume)
	arg1GdFloat = (C.GdFloat)(volume)
	
	C.cgo_callfn_GDExtensionSpxAudioSetMusicVolume(arg0,arg1GdFloat,)
	
}
function CallAudioGetMusicVolume(
	) GdFloat {
	arg0 := (C.GDExtensionSpxAudioGetMusicVolume)(api.SpxAudioGetMusicVolume)
	var ret_val C.GdFloat 
	C.cgo_callfn_GDExtensionSpxAudioGetMusicVolume(arg0, &ret_val)
	return (GdFloat)(ret_val)
}
function CallAudioPauseMusic(
	)  {
	arg0 := (C.GDExtensionSpxAudioPauseMusic)(api.SpxAudioPauseMusic)
	
	C.cgo_callfn_GDExtensionSpxAudioPauseMusic(arg0,)
}
function CallAudioResumeMusic(
	)  {
	arg0 := (C.GDExtensionSpxAudioResumeMusic)(api.SpxAudioResumeMusic)
	
	C.cgo_callfn_GDExtensionSpxAudioResumeMusic(arg0,)
}
function CallAudioGetMusicTimer(
	) GdFloat {
	arg0 := (C.GDExtensionSpxAudioGetMusicTimer)(api.SpxAudioGetMusicTimer)
	var ret_val C.GdFloat 
	C.cgo_callfn_GDExtensionSpxAudioGetMusicTimer(arg0, &ret_val)
	return (GdFloat)(ret_val)
}
function CallAudioSetMusicTimer(
	time GdFloat,
	)  {
	arg0 := (C.GDExtensionSpxAudioSetMusicTimer)(api.SpxAudioSetMusicTimer)
	arg1GdFloat = (C.GdFloat)(time)
	
	C.cgo_callfn_GDExtensionSpxAudioSetMusicTimer(arg0,arg1GdFloat,)
	
}
function CallCameraGetCameraPosition(
	) GdVec2 {
	arg0 := (C.GDExtensionSpxCameraGetCameraPosition)(api.SpxCameraGetCameraPosition)
	var ret_val C.GdVec2 
	C.cgo_callfn_GDExtensionSpxCameraGetCameraPosition(arg0, &ret_val)
	return (GdVec2)(ret_val)
}
function CallCameraSetCameraPosition(
	position GdVec2,
	)  {
	arg0 := (C.GDExtensionSpxCameraSetCameraPosition)(api.SpxCameraSetCameraPosition)
	arg1GdVec2 = (C.GdVec2)(position)
	
	C.cgo_callfn_GDExtensionSpxCameraSetCameraPosition(arg0,arg1GdVec2,)
	
}
function CallCameraGetCameraZoom(
	) GdVec2 {
	arg0 := (C.GDExtensionSpxCameraGetCameraZoom)(api.SpxCameraGetCameraZoom)
	var ret_val C.GdVec2 
	C.cgo_callfn_GDExtensionSpxCameraGetCameraZoom(arg0, &ret_val)
	return (GdVec2)(ret_val)
}
function CallCameraSetCameraZoom(
	size GdVec2,
	)  {
	arg0 := (C.GDExtensionSpxCameraSetCameraZoom)(api.SpxCameraSetCameraZoom)
	arg1GdVec2 = (C.GdVec2)(size)
	
	C.cgo_callfn_GDExtensionSpxCameraSetCameraZoom(arg0,arg1GdVec2,)
	
}
function CallCameraGetViewportRect(
	) GdRect2 {
	arg0 := (C.GDExtensionSpxCameraGetViewportRect)(api.SpxCameraGetViewportRect)
	var ret_val C.GdRect2 
	C.cgo_callfn_GDExtensionSpxCameraGetViewportRect(arg0, &ret_val)
	return (GdRect2)(ret_val)
}
function CallInputGetMousePos(
	) GdVec2 {
	arg0 := (C.GDExtensionSpxInputGetMousePos)(api.SpxInputGetMousePos)
	var ret_val C.GdVec2 
	C.cgo_callfn_GDExtensionSpxInputGetMousePos(arg0, &ret_val)
	return (GdVec2)(ret_val)
}
function CallInputGetKey(
	key GdInt,
	) GdBool {
	arg0 := (C.GDExtensionSpxInputGetKey)(api.SpxInputGetKey)
	arg1GdInt = (C.GdInt)(key)
	var ret_val C.GdBool 
	C.cgo_callfn_GDExtensionSpxInputGetKey(arg0,arg1GdInt, &ret_val)
	
	return (GdBool)(ret_val)
}
function CallInputGetMouseState(
	mouse_id GdInt,
	) GdBool {
	arg0 := (C.GDExtensionSpxInputGetMouseState)(api.SpxInputGetMouseState)
	arg1GdInt = (C.GdInt)(mouse_id)
	var ret_val C.GdBool 
	C.cgo_callfn_GDExtensionSpxInputGetMouseState(arg0,arg1GdInt, &ret_val)
	
	return (GdBool)(ret_val)
}
function CallInputGetKeyState(
	key GdInt,
	) GdInt {
	arg0 := (C.GDExtensionSpxInputGetKeyState)(api.SpxInputGetKeyState)
	arg1GdInt = (C.GdInt)(key)
	var ret_val C.GdInt 
	C.cgo_callfn_GDExtensionSpxInputGetKeyState(arg0,arg1GdInt, &ret_val)
	
	return (GdInt)(ret_val)
}
function CallInputGetAxis(
	neg_action GdString,
	pos_action GdString,
	) GdFloat {
	arg0 := (C.GDExtensionSpxInputGetAxis)(api.SpxInputGetAxis)
	arg1GdString = (C.GdString)(neg_action)
	arg2GdString = (C.GdString)(pos_action)
	var ret_val C.GdFloat 
	C.cgo_callfn_GDExtensionSpxInputGetAxis(arg0,arg1GdString,arg2GdString, &ret_val)
	
	
	return (GdFloat)(ret_val)
}
function CallInputIsActionPressed(
	action GdString,
	) GdBool {
	arg0 := (C.GDExtensionSpxInputIsActionPressed)(api.SpxInputIsActionPressed)
	arg1GdString = (C.GdString)(action)
	var ret_val C.GdBool 
	C.cgo_callfn_GDExtensionSpxInputIsActionPressed(arg0,arg1GdString, &ret_val)
	
	return (GdBool)(ret_val)
}
function CallInputIsActionJustPressed(
	action GdString,
	) GdBool {
	arg0 := (C.GDExtensionSpxInputIsActionJustPressed)(api.SpxInputIsActionJustPressed)
	arg1GdString = (C.GdString)(action)
	var ret_val C.GdBool 
	C.cgo_callfn_GDExtensionSpxInputIsActionJustPressed(arg0,arg1GdString, &ret_val)
	
	return (GdBool)(ret_val)
}
function CallInputIsActionJustReleased(
	action GdString,
	) GdBool {
	arg0 := (C.GDExtensionSpxInputIsActionJustReleased)(api.SpxInputIsActionJustReleased)
	arg1GdString = (C.GdString)(action)
	var ret_val C.GdBool 
	C.cgo_callfn_GDExtensionSpxInputIsActionJustReleased(arg0,arg1GdString, &ret_val)
	
	return (GdBool)(ret_val)
}
function CallPhysicRaycast(
	from GdVec2,
	to GdVec2,
	collision_mask GdInt,
	) GdObj {
	arg0 := (C.GDExtensionSpxPhysicRaycast)(api.SpxPhysicRaycast)
	arg1GdVec2 = (C.GdVec2)(from)
	arg2GdVec2 = (C.GdVec2)(to)
	arg3GdInt = (C.GdInt)(collision_mask)
	var ret_val C.GdObj 
	C.cgo_callfn_GDExtensionSpxPhysicRaycast(arg0,arg1GdVec2,arg2GdVec2,arg3GdInt, &ret_val)
	
	
	
	return (GdObj)(ret_val)
}
function CallPhysicCheckCollision(
	from GdVec2,
	to GdVec2,
	collision_mask GdInt,
	collide_with_areas GdBool,
	collide_with_bodies GdBool,
	) GdBool {
	arg0 := (C.GDExtensionSpxPhysicCheckCollision)(api.SpxPhysicCheckCollision)
	arg1GdVec2 = (C.GdVec2)(from)
	arg2GdVec2 = (C.GdVec2)(to)
	arg3GdInt = (C.GdInt)(collision_mask)
	arg4GdBool = (C.GdBool)(collide_with_areas)
	arg5GdBool = (C.GdBool)(collide_with_bodies)
	var ret_val C.GdBool 
	C.cgo_callfn_GDExtensionSpxPhysicCheckCollision(arg0,arg1GdVec2,arg2GdVec2,arg3GdInt,arg4GdBool,arg5GdBool, &ret_val)
	
	
	
	
	
	return (GdBool)(ret_val)
}
function CallSceneChangeSceneToFile(
	path GdString,
	)  {
	arg0 := (C.GDExtensionSpxSceneChangeSceneToFile)(api.SpxSceneChangeSceneToFile)
	arg1GdString = (C.GdString)(path)
	
	C.cgo_callfn_GDExtensionSpxSceneChangeSceneToFile(arg0,arg1GdString,)
	
}
function CallSceneReloadCurrentScene(
	) GdInt {
	arg0 := (C.GDExtensionSpxSceneReloadCurrentScene)(api.SpxSceneReloadCurrentScene)
	var ret_val C.GdInt 
	C.cgo_callfn_GDExtensionSpxSceneReloadCurrentScene(arg0, &ret_val)
	return (GdInt)(ret_val)
}
function CallSceneUnloadCurrentScene(
	)  {
	arg0 := (C.GDExtensionSpxSceneUnloadCurrentScene)(api.SpxSceneUnloadCurrentScene)
	
	C.cgo_callfn_GDExtensionSpxSceneUnloadCurrentScene(arg0,)
}
function CallSpriteSetDontDestroyOnLoad(
	obj GdObj,
	)  {
	arg0 := (C.GDExtensionSpxSpriteSetDontDestroyOnLoad)(api.SpxSpriteSetDontDestroyOnLoad)
	arg1GdObj = (C.GdObj)(obj)
	
	C.cgo_callfn_GDExtensionSpxSpriteSetDontDestroyOnLoad(arg0,arg1GdObj,)
	
}
function CallSpriteSetProcess(
	obj GdObj,
	is_on GdBool,
	)  {
	arg0 := (C.GDExtensionSpxSpriteSetProcess)(api.SpxSpriteSetProcess)
	arg1GdObj = (C.GdObj)(obj)
	arg2GdBool = (C.GdBool)(is_on)
	
	C.cgo_callfn_GDExtensionSpxSpriteSetProcess(arg0,arg1GdObj,arg2GdBool,)
	
	
}
function CallSpriteSetPhysicProcess(
	obj GdObj,
	is_on GdBool,
	)  {
	arg0 := (C.GDExtensionSpxSpriteSetPhysicProcess)(api.SpxSpriteSetPhysicProcess)
	arg1GdObj = (C.GdObj)(obj)
	arg2GdBool = (C.GdBool)(is_on)
	
	C.cgo_callfn_GDExtensionSpxSpriteSetPhysicProcess(arg0,arg1GdObj,arg2GdBool,)
	
	
}
function CallSpriteSetChildPosition(
	obj GdObj,
	path GdString,
	pos GdVec2,
	)  {
	arg0 := (C.GDExtensionSpxSpriteSetChildPosition)(api.SpxSpriteSetChildPosition)
	arg1GdObj = (C.GdObj)(obj)
	arg2GdString = (C.GdString)(path)
	arg3GdVec2 = (C.GdVec2)(pos)
	
	C.cgo_callfn_GDExtensionSpxSpriteSetChildPosition(arg0,arg1GdObj,arg2GdString,arg3GdVec2,)
	
	
	
}
function CallSpriteGetChildPosition(
	obj GdObj,
	path GdString,
	) GdVec2 {
	arg0 := (C.GDExtensionSpxSpriteGetChildPosition)(api.SpxSpriteGetChildPosition)
	arg1GdObj = (C.GdObj)(obj)
	arg2GdString = (C.GdString)(path)
	var ret_val C.GdVec2 
	C.cgo_callfn_GDExtensionSpxSpriteGetChildPosition(arg0,arg1GdObj,arg2GdString, &ret_val)
	
	
	return (GdVec2)(ret_val)
}
function CallSpriteSetChildRotation(
	obj GdObj,
	path GdString,
	rot GdFloat,
	)  {
	arg0 := (C.GDExtensionSpxSpriteSetChildRotation)(api.SpxSpriteSetChildRotation)
	arg1GdObj = (C.GdObj)(obj)
	arg2GdString = (C.GdString)(path)
	arg3GdFloat = (C.GdFloat)(rot)
	
	C.cgo_callfn_GDExtensionSpxSpriteSetChildRotation(arg0,arg1GdObj,arg2GdString,arg3GdFloat,)
	
	
	
}
function CallSpriteGetChildRotation(
	obj GdObj,
	path GdString,
	) GdFloat {
	arg0 := (C.GDExtensionSpxSpriteGetChildRotation)(api.SpxSpriteGetChildRotation)
	arg1GdObj = (C.GdObj)(obj)
	arg2GdString = (C.GdString)(path)
	var ret_val C.GdFloat 
	C.cgo_callfn_GDExtensionSpxSpriteGetChildRotation(arg0,arg1GdObj,arg2GdString, &ret_val)
	
	
	return (GdFloat)(ret_val)
}
function CallSpriteSetChildScale(
	obj GdObj,
	path GdString,
	scale GdVec2,
	)  {
	arg0 := (C.GDExtensionSpxSpriteSetChildScale)(api.SpxSpriteSetChildScale)
	arg1GdObj = (C.GdObj)(obj)
	arg2GdString = (C.GdString)(path)
	arg3GdVec2 = (C.GdVec2)(scale)
	
	C.cgo_callfn_GDExtensionSpxSpriteSetChildScale(arg0,arg1GdObj,arg2GdString,arg3GdVec2,)
	
	
	
}
function CallSpriteGetChildScale(
	obj GdObj,
	path GdString,
	) GdVec2 {
	arg0 := (C.GDExtensionSpxSpriteGetChildScale)(api.SpxSpriteGetChildScale)
	arg1GdObj = (C.GdObj)(obj)
	arg2GdString = (C.GdString)(path)
	var ret_val C.GdVec2 
	C.cgo_callfn_GDExtensionSpxSpriteGetChildScale(arg0,arg1GdObj,arg2GdString, &ret_val)
	
	
	return (GdVec2)(ret_val)
}
function CallSpriteCreateSprite(
	path GdString,
	) GdObj {
	arg0 := (C.GDExtensionSpxSpriteCreateSprite)(api.SpxSpriteCreateSprite)
	arg1GdString = (C.GdString)(path)
	var ret_val C.GdObj 
	C.cgo_callfn_GDExtensionSpxSpriteCreateSprite(arg0,arg1GdString, &ret_val)
	
	return (GdObj)(ret_val)
}
function CallSpriteCloneSprite(
	obj GdObj,
	) GdObj {
	arg0 := (C.GDExtensionSpxSpriteCloneSprite)(api.SpxSpriteCloneSprite)
	arg1GdObj = (C.GdObj)(obj)
	var ret_val C.GdObj 
	C.cgo_callfn_GDExtensionSpxSpriteCloneSprite(arg0,arg1GdObj, &ret_val)
	
	return (GdObj)(ret_val)
}
function CallSpriteDestroySprite(
	obj GdObj,
	) GdBool {
	arg0 := (C.GDExtensionSpxSpriteDestroySprite)(api.SpxSpriteDestroySprite)
	arg1GdObj = (C.GdObj)(obj)
	var ret_val C.GdBool 
	C.cgo_callfn_GDExtensionSpxSpriteDestroySprite(arg0,arg1GdObj, &ret_val)
	
	return (GdBool)(ret_val)
}
function CallSpriteIsSpriteAlive(
	obj GdObj,
	) GdBool {
	arg0 := (C.GDExtensionSpxSpriteIsSpriteAlive)(api.SpxSpriteIsSpriteAlive)
	arg1GdObj = (C.GdObj)(obj)
	var ret_val C.GdBool 
	C.cgo_callfn_GDExtensionSpxSpriteIsSpriteAlive(arg0,arg1GdObj, &ret_val)
	
	return (GdBool)(ret_val)
}
function CallSpriteSetPosition(
	obj GdObj,
	pos GdVec2,
	)  {
	arg0 := (C.GDExtensionSpxSpriteSetPosition)(api.SpxSpriteSetPosition)
	arg1GdObj = (C.GdObj)(obj)
	arg2GdVec2 = (C.GdVec2)(pos)
	
	C.cgo_callfn_GDExtensionSpxSpriteSetPosition(arg0,arg1GdObj,arg2GdVec2,)
	
	
}
function CallSpriteGetPosition(
	obj GdObj,
	) GdVec2 {
	arg0 := (C.GDExtensionSpxSpriteGetPosition)(api.SpxSpriteGetPosition)
	arg1GdObj = (C.GdObj)(obj)
	var ret_val C.GdVec2 
	C.cgo_callfn_GDExtensionSpxSpriteGetPosition(arg0,arg1GdObj, &ret_val)
	
	return (GdVec2)(ret_val)
}
function CallSpriteSetRotation(
	obj GdObj,
	rot GdFloat,
	)  {
	arg0 := (C.GDExtensionSpxSpriteSetRotation)(api.SpxSpriteSetRotation)
	arg1GdObj = (C.GdObj)(obj)
	arg2GdFloat = (C.GdFloat)(rot)
	
	C.cgo_callfn_GDExtensionSpxSpriteSetRotation(arg0,arg1GdObj,arg2GdFloat,)
	
	
}
function CallSpriteGetRotation(
	obj GdObj,
	) GdFloat {
	arg0 := (C.GDExtensionSpxSpriteGetRotation)(api.SpxSpriteGetRotation)
	arg1GdObj = (C.GdObj)(obj)
	var ret_val C.GdFloat 
	C.cgo_callfn_GDExtensionSpxSpriteGetRotation(arg0,arg1GdObj, &ret_val)
	
	return (GdFloat)(ret_val)
}
function CallSpriteSetScale(
	obj GdObj,
	scale GdVec2,
	)  {
	arg0 := (C.GDExtensionSpxSpriteSetScale)(api.SpxSpriteSetScale)
	arg1GdObj = (C.GdObj)(obj)
	arg2GdVec2 = (C.GdVec2)(scale)
	
	C.cgo_callfn_GDExtensionSpxSpriteSetScale(arg0,arg1GdObj,arg2GdVec2,)
	
	
}
function CallSpriteGetScale(
	obj GdObj,
	) GdVec2 {
	arg0 := (C.GDExtensionSpxSpriteGetScale)(api.SpxSpriteGetScale)
	arg1GdObj = (C.GdObj)(obj)
	var ret_val C.GdVec2 
	C.cgo_callfn_GDExtensionSpxSpriteGetScale(arg0,arg1GdObj, &ret_val)
	
	return (GdVec2)(ret_val)
}
function CallSpriteSetColor(
	obj GdObj,
	color GdColor,
	)  {
	arg0 := (C.GDExtensionSpxSpriteSetColor)(api.SpxSpriteSetColor)
	arg1GdObj = (C.GdObj)(obj)
	arg2GdColor = (C.GdColor)(color)
	
	C.cgo_callfn_GDExtensionSpxSpriteSetColor(arg0,arg1GdObj,arg2GdColor,)
	
	
}
function CallSpriteGetColor(
	obj GdObj,
	) GdColor {
	arg0 := (C.GDExtensionSpxSpriteGetColor)(api.SpxSpriteGetColor)
	arg1GdObj = (C.GdObj)(obj)
	var ret_val C.GdColor 
	C.cgo_callfn_GDExtensionSpxSpriteGetColor(arg0,arg1GdObj, &ret_val)
	
	return (GdColor)(ret_val)
}
function CallSpriteSetTexture(
	obj GdObj,
	path GdString,
	)  {
	arg0 := (C.GDExtensionSpxSpriteSetTexture)(api.SpxSpriteSetTexture)
	arg1GdObj = (C.GdObj)(obj)
	arg2GdString = (C.GdString)(path)
	
	C.cgo_callfn_GDExtensionSpxSpriteSetTexture(arg0,arg1GdObj,arg2GdString,)
	
	
}
function CallSpriteGetTexture(
	obj GdObj,
	) GdString {
	arg0 := (C.GDExtensionSpxSpriteGetTexture)(api.SpxSpriteGetTexture)
	arg1GdObj = (C.GdObj)(obj)
	var ret_val C.GdString 
	C.cgo_callfn_GDExtensionSpxSpriteGetTexture(arg0,arg1GdObj, &ret_val)
	
	return (GdString)(ret_val)
}
function CallSpriteSetVisible(
	obj GdObj,
	visible GdBool,
	)  {
	arg0 := (C.GDExtensionSpxSpriteSetVisible)(api.SpxSpriteSetVisible)
	arg1GdObj = (C.GdObj)(obj)
	arg2GdBool = (C.GdBool)(visible)
	
	C.cgo_callfn_GDExtensionSpxSpriteSetVisible(arg0,arg1GdObj,arg2GdBool,)
	
	
}
function CallSpriteGetVisible(
	obj GdObj,
	) GdBool {
	arg0 := (C.GDExtensionSpxSpriteGetVisible)(api.SpxSpriteGetVisible)
	arg1GdObj = (C.GdObj)(obj)
	var ret_val C.GdBool 
	C.cgo_callfn_GDExtensionSpxSpriteGetVisible(arg0,arg1GdObj, &ret_val)
	
	return (GdBool)(ret_val)
}
function CallSpriteGetZIndex(
	obj GdObj,
	) GdInt {
	arg0 := (C.GDExtensionSpxSpriteGetZIndex)(api.SpxSpriteGetZIndex)
	arg1GdObj = (C.GdObj)(obj)
	var ret_val C.GdInt 
	C.cgo_callfn_GDExtensionSpxSpriteGetZIndex(arg0,arg1GdObj, &ret_val)
	
	return (GdInt)(ret_val)
}
function CallSpriteSetZIndex(
	obj GdObj,
	z GdInt,
	)  {
	arg0 := (C.GDExtensionSpxSpriteSetZIndex)(api.SpxSpriteSetZIndex)
	arg1GdObj = (C.GdObj)(obj)
	arg2GdInt = (C.GdInt)(z)
	
	C.cgo_callfn_GDExtensionSpxSpriteSetZIndex(arg0,arg1GdObj,arg2GdInt,)
	
	
}
function CallSpritePlayAnim(
	obj GdObj,
	p_name GdString,
	p_custom_scale GdFloat,
	p_from_end GdBool,
	)  {
	arg0 := (C.GDExtensionSpxSpritePlayAnim)(api.SpxSpritePlayAnim)
	arg1GdObj = (C.GdObj)(obj)
	arg2GdString = (C.GdString)(p_name)
	arg3GdFloat = (C.GdFloat)(p_custom_scale)
	arg4GdBool = (C.GdBool)(p_from_end)
	
	C.cgo_callfn_GDExtensionSpxSpritePlayAnim(arg0,arg1GdObj,arg2GdString,arg3GdFloat,arg4GdBool,)
	
	
	
	
}
function CallSpritePlayBackwardsAnim(
	obj GdObj,
	p_name GdString,
	)  {
	arg0 := (C.GDExtensionSpxSpritePlayBackwardsAnim)(api.SpxSpritePlayBackwardsAnim)
	arg1GdObj = (C.GdObj)(obj)
	arg2GdString = (C.GdString)(p_name)
	
	C.cgo_callfn_GDExtensionSpxSpritePlayBackwardsAnim(arg0,arg1GdObj,arg2GdString,)
	
	
}
function CallSpritePauseAnim(
	obj GdObj,
	)  {
	arg0 := (C.GDExtensionSpxSpritePauseAnim)(api.SpxSpritePauseAnim)
	arg1GdObj = (C.GdObj)(obj)
	
	C.cgo_callfn_GDExtensionSpxSpritePauseAnim(arg0,arg1GdObj,)
	
}
function CallSpriteStopAnim(
	obj GdObj,
	)  {
	arg0 := (C.GDExtensionSpxSpriteStopAnim)(api.SpxSpriteStopAnim)
	arg1GdObj = (C.GdObj)(obj)
	
	C.cgo_callfn_GDExtensionSpxSpriteStopAnim(arg0,arg1GdObj,)
	
}
function CallSpriteIsPlayingAnim(
	obj GdObj,
	) GdBool {
	arg0 := (C.GDExtensionSpxSpriteIsPlayingAnim)(api.SpxSpriteIsPlayingAnim)
	arg1GdObj = (C.GdObj)(obj)
	var ret_val C.GdBool 
	C.cgo_callfn_GDExtensionSpxSpriteIsPlayingAnim(arg0,arg1GdObj, &ret_val)
	
	return (GdBool)(ret_val)
}
function CallSpriteSetAnim(
	obj GdObj,
	p_name GdString,
	)  {
	arg0 := (C.GDExtensionSpxSpriteSetAnim)(api.SpxSpriteSetAnim)
	arg1GdObj = (C.GdObj)(obj)
	arg2GdString = (C.GdString)(p_name)
	
	C.cgo_callfn_GDExtensionSpxSpriteSetAnim(arg0,arg1GdObj,arg2GdString,)
	
	
}
function CallSpriteGetAnim(
	obj GdObj,
	) GdString {
	arg0 := (C.GDExtensionSpxSpriteGetAnim)(api.SpxSpriteGetAnim)
	arg1GdObj = (C.GdObj)(obj)
	var ret_val C.GdString 
	C.cgo_callfn_GDExtensionSpxSpriteGetAnim(arg0,arg1GdObj, &ret_val)
	
	return (GdString)(ret_val)
}
function CallSpriteSetAnimFrame(
	obj GdObj,
	p_frame GdInt,
	)  {
	arg0 := (C.GDExtensionSpxSpriteSetAnimFrame)(api.SpxSpriteSetAnimFrame)
	arg1GdObj = (C.GdObj)(obj)
	arg2GdInt = (C.GdInt)(p_frame)
	
	C.cgo_callfn_GDExtensionSpxSpriteSetAnimFrame(arg0,arg1GdObj,arg2GdInt,)
	
	
}
function CallSpriteGetAnimFrame(
	obj GdObj,
	) GdInt {
	arg0 := (C.GDExtensionSpxSpriteGetAnimFrame)(api.SpxSpriteGetAnimFrame)
	arg1GdObj = (C.GdObj)(obj)
	var ret_val C.GdInt 
	C.cgo_callfn_GDExtensionSpxSpriteGetAnimFrame(arg0,arg1GdObj, &ret_val)
	
	return (GdInt)(ret_val)
}
function CallSpriteSetAnimSpeedScale(
	obj GdObj,
	p_speed_scale GdFloat,
	)  {
	arg0 := (C.GDExtensionSpxSpriteSetAnimSpeedScale)(api.SpxSpriteSetAnimSpeedScale)
	arg1GdObj = (C.GdObj)(obj)
	arg2GdFloat = (C.GdFloat)(p_speed_scale)
	
	C.cgo_callfn_GDExtensionSpxSpriteSetAnimSpeedScale(arg0,arg1GdObj,arg2GdFloat,)
	
	
}
function CallSpriteGetAnimSpeedScale(
	obj GdObj,
	) GdFloat {
	arg0 := (C.GDExtensionSpxSpriteGetAnimSpeedScale)(api.SpxSpriteGetAnimSpeedScale)
	arg1GdObj = (C.GdObj)(obj)
	var ret_val C.GdFloat 
	C.cgo_callfn_GDExtensionSpxSpriteGetAnimSpeedScale(arg0,arg1GdObj, &ret_val)
	
	return (GdFloat)(ret_val)
}
function CallSpriteGetAnimPlayingSpeed(
	obj GdObj,
	) GdFloat {
	arg0 := (C.GDExtensionSpxSpriteGetAnimPlayingSpeed)(api.SpxSpriteGetAnimPlayingSpeed)
	arg1GdObj = (C.GdObj)(obj)
	var ret_val C.GdFloat 
	C.cgo_callfn_GDExtensionSpxSpriteGetAnimPlayingSpeed(arg0,arg1GdObj, &ret_val)
	
	return (GdFloat)(ret_val)
}
function CallSpriteSetAnimCentered(
	obj GdObj,
	p_center GdBool,
	)  {
	arg0 := (C.GDExtensionSpxSpriteSetAnimCentered)(api.SpxSpriteSetAnimCentered)
	arg1GdObj = (C.GdObj)(obj)
	arg2GdBool = (C.GdBool)(p_center)
	
	C.cgo_callfn_GDExtensionSpxSpriteSetAnimCentered(arg0,arg1GdObj,arg2GdBool,)
	
	
}
function CallSpriteIsAnimCentered(
	obj GdObj,
	) GdBool {
	arg0 := (C.GDExtensionSpxSpriteIsAnimCentered)(api.SpxSpriteIsAnimCentered)
	arg1GdObj = (C.GdObj)(obj)
	var ret_val C.GdBool 
	C.cgo_callfn_GDExtensionSpxSpriteIsAnimCentered(arg0,arg1GdObj, &ret_val)
	
	return (GdBool)(ret_val)
}
function CallSpriteSetAnimOffset(
	obj GdObj,
	p_offset GdVec2,
	)  {
	arg0 := (C.GDExtensionSpxSpriteSetAnimOffset)(api.SpxSpriteSetAnimOffset)
	arg1GdObj = (C.GdObj)(obj)
	arg2GdVec2 = (C.GdVec2)(p_offset)
	
	C.cgo_callfn_GDExtensionSpxSpriteSetAnimOffset(arg0,arg1GdObj,arg2GdVec2,)
	
	
}
function CallSpriteGetAnimOffset(
	obj GdObj,
	) GdVec2 {
	arg0 := (C.GDExtensionSpxSpriteGetAnimOffset)(api.SpxSpriteGetAnimOffset)
	arg1GdObj = (C.GdObj)(obj)
	var ret_val C.GdVec2 
	C.cgo_callfn_GDExtensionSpxSpriteGetAnimOffset(arg0,arg1GdObj, &ret_val)
	
	return (GdVec2)(ret_val)
}
function CallSpriteSetAnimFlipH(
	obj GdObj,
	p_flip GdBool,
	)  {
	arg0 := (C.GDExtensionSpxSpriteSetAnimFlipH)(api.SpxSpriteSetAnimFlipH)
	arg1GdObj = (C.GdObj)(obj)
	arg2GdBool = (C.GdBool)(p_flip)
	
	C.cgo_callfn_GDExtensionSpxSpriteSetAnimFlipH(arg0,arg1GdObj,arg2GdBool,)
	
	
}
function CallSpriteIsAnimFlippedH(
	obj GdObj,
	) GdBool {
	arg0 := (C.GDExtensionSpxSpriteIsAnimFlippedH)(api.SpxSpriteIsAnimFlippedH)
	arg1GdObj = (C.GdObj)(obj)
	var ret_val C.GdBool 
	C.cgo_callfn_GDExtensionSpxSpriteIsAnimFlippedH(arg0,arg1GdObj, &ret_val)
	
	return (GdBool)(ret_val)
}
function CallSpriteSetAnimFlipV(
	obj GdObj,
	p_flip GdBool,
	)  {
	arg0 := (C.GDExtensionSpxSpriteSetAnimFlipV)(api.SpxSpriteSetAnimFlipV)
	arg1GdObj = (C.GdObj)(obj)
	arg2GdBool = (C.GdBool)(p_flip)
	
	C.cgo_callfn_GDExtensionSpxSpriteSetAnimFlipV(arg0,arg1GdObj,arg2GdBool,)
	
	
}
function CallSpriteIsAnimFlippedV(
	obj GdObj,
	) GdBool {
	arg0 := (C.GDExtensionSpxSpriteIsAnimFlippedV)(api.SpxSpriteIsAnimFlippedV)
	arg1GdObj = (C.GdObj)(obj)
	var ret_val C.GdBool 
	C.cgo_callfn_GDExtensionSpxSpriteIsAnimFlippedV(arg0,arg1GdObj, &ret_val)
	
	return (GdBool)(ret_val)
}
function CallSpriteSetVelocity(
	obj GdObj,
	velocity GdVec2,
	)  {
	arg0 := (C.GDExtensionSpxSpriteSetVelocity)(api.SpxSpriteSetVelocity)
	arg1GdObj = (C.GdObj)(obj)
	arg2GdVec2 = (C.GdVec2)(velocity)
	
	C.cgo_callfn_GDExtensionSpxSpriteSetVelocity(arg0,arg1GdObj,arg2GdVec2,)
	
	
}
function CallSpriteGetVelocity(
	obj GdObj,
	) GdVec2 {
	arg0 := (C.GDExtensionSpxSpriteGetVelocity)(api.SpxSpriteGetVelocity)
	arg1GdObj = (C.GdObj)(obj)
	var ret_val C.GdVec2 
	C.cgo_callfn_GDExtensionSpxSpriteGetVelocity(arg0,arg1GdObj, &ret_val)
	
	return (GdVec2)(ret_val)
}
function CallSpriteIsOnFloor(
	obj GdObj,
	) GdBool {
	arg0 := (C.GDExtensionSpxSpriteIsOnFloor)(api.SpxSpriteIsOnFloor)
	arg1GdObj = (C.GdObj)(obj)
	var ret_val C.GdBool 
	C.cgo_callfn_GDExtensionSpxSpriteIsOnFloor(arg0,arg1GdObj, &ret_val)
	
	return (GdBool)(ret_val)
}
function CallSpriteIsOnFloorOnly(
	obj GdObj,
	) GdBool {
	arg0 := (C.GDExtensionSpxSpriteIsOnFloorOnly)(api.SpxSpriteIsOnFloorOnly)
	arg1GdObj = (C.GdObj)(obj)
	var ret_val C.GdBool 
	C.cgo_callfn_GDExtensionSpxSpriteIsOnFloorOnly(arg0,arg1GdObj, &ret_val)
	
	return (GdBool)(ret_val)
}
function CallSpriteIsOnWall(
	obj GdObj,
	) GdBool {
	arg0 := (C.GDExtensionSpxSpriteIsOnWall)(api.SpxSpriteIsOnWall)
	arg1GdObj = (C.GdObj)(obj)
	var ret_val C.GdBool 
	C.cgo_callfn_GDExtensionSpxSpriteIsOnWall(arg0,arg1GdObj, &ret_val)
	
	return (GdBool)(ret_val)
}
function CallSpriteIsOnWallOnly(
	obj GdObj,
	) GdBool {
	arg0 := (C.GDExtensionSpxSpriteIsOnWallOnly)(api.SpxSpriteIsOnWallOnly)
	arg1GdObj = (C.GdObj)(obj)
	var ret_val C.GdBool 
	C.cgo_callfn_GDExtensionSpxSpriteIsOnWallOnly(arg0,arg1GdObj, &ret_val)
	
	return (GdBool)(ret_val)
}
function CallSpriteIsOnCeiling(
	obj GdObj,
	) GdBool {
	arg0 := (C.GDExtensionSpxSpriteIsOnCeiling)(api.SpxSpriteIsOnCeiling)
	arg1GdObj = (C.GdObj)(obj)
	var ret_val C.GdBool 
	C.cgo_callfn_GDExtensionSpxSpriteIsOnCeiling(arg0,arg1GdObj, &ret_val)
	
	return (GdBool)(ret_val)
}
function CallSpriteIsOnCeilingOnly(
	obj GdObj,
	) GdBool {
	arg0 := (C.GDExtensionSpxSpriteIsOnCeilingOnly)(api.SpxSpriteIsOnCeilingOnly)
	arg1GdObj = (C.GdObj)(obj)
	var ret_val C.GdBool 
	C.cgo_callfn_GDExtensionSpxSpriteIsOnCeilingOnly(arg0,arg1GdObj, &ret_val)
	
	return (GdBool)(ret_val)
}
function CallSpriteGetLastMotion(
	obj GdObj,
	) GdVec2 {
	arg0 := (C.GDExtensionSpxSpriteGetLastMotion)(api.SpxSpriteGetLastMotion)
	arg1GdObj = (C.GdObj)(obj)
	var ret_val C.GdVec2 
	C.cgo_callfn_GDExtensionSpxSpriteGetLastMotion(arg0,arg1GdObj, &ret_val)
	
	return (GdVec2)(ret_val)
}
function CallSpriteGetPositionDelta(
	obj GdObj,
	) GdVec2 {
	arg0 := (C.GDExtensionSpxSpriteGetPositionDelta)(api.SpxSpriteGetPositionDelta)
	arg1GdObj = (C.GdObj)(obj)
	var ret_val C.GdVec2 
	C.cgo_callfn_GDExtensionSpxSpriteGetPositionDelta(arg0,arg1GdObj, &ret_val)
	
	return (GdVec2)(ret_val)
}
function CallSpriteGetFloorNormal(
	obj GdObj,
	) GdVec2 {
	arg0 := (C.GDExtensionSpxSpriteGetFloorNormal)(api.SpxSpriteGetFloorNormal)
	arg1GdObj = (C.GdObj)(obj)
	var ret_val C.GdVec2 
	C.cgo_callfn_GDExtensionSpxSpriteGetFloorNormal(arg0,arg1GdObj, &ret_val)
	
	return (GdVec2)(ret_val)
}
function CallSpriteGetWallNormal(
	obj GdObj,
	) GdVec2 {
	arg0 := (C.GDExtensionSpxSpriteGetWallNormal)(api.SpxSpriteGetWallNormal)
	arg1GdObj = (C.GdObj)(obj)
	var ret_val C.GdVec2 
	C.cgo_callfn_GDExtensionSpxSpriteGetWallNormal(arg0,arg1GdObj, &ret_val)
	
	return (GdVec2)(ret_val)
}
function CallSpriteGetRealVelocity(
	obj GdObj,
	) GdVec2 {
	arg0 := (C.GDExtensionSpxSpriteGetRealVelocity)(api.SpxSpriteGetRealVelocity)
	arg1GdObj = (C.GdObj)(obj)
	var ret_val C.GdVec2 
	C.cgo_callfn_GDExtensionSpxSpriteGetRealVelocity(arg0,arg1GdObj, &ret_val)
	
	return (GdVec2)(ret_val)
}
function CallSpriteMoveAndSlide(
	obj GdObj,
	)  {
	arg0 := (C.GDExtensionSpxSpriteMoveAndSlide)(api.SpxSpriteMoveAndSlide)
	arg1GdObj = (C.GdObj)(obj)
	
	C.cgo_callfn_GDExtensionSpxSpriteMoveAndSlide(arg0,arg1GdObj,)
	
}
function CallSpriteSetGravity(
	obj GdObj,
	gravity GdFloat,
	)  {
	arg0 := (C.GDExtensionSpxSpriteSetGravity)(api.SpxSpriteSetGravity)
	arg1GdObj = (C.GdObj)(obj)
	arg2GdFloat = (C.GdFloat)(gravity)
	
	C.cgo_callfn_GDExtensionSpxSpriteSetGravity(arg0,arg1GdObj,arg2GdFloat,)
	
	
}
function CallSpriteGetGravity(
	obj GdObj,
	) GdFloat {
	arg0 := (C.GDExtensionSpxSpriteGetGravity)(api.SpxSpriteGetGravity)
	arg1GdObj = (C.GdObj)(obj)
	var ret_val C.GdFloat 
	C.cgo_callfn_GDExtensionSpxSpriteGetGravity(arg0,arg1GdObj, &ret_val)
	
	return (GdFloat)(ret_val)
}
function CallSpriteSetMass(
	obj GdObj,
	mass GdFloat,
	)  {
	arg0 := (C.GDExtensionSpxSpriteSetMass)(api.SpxSpriteSetMass)
	arg1GdObj = (C.GdObj)(obj)
	arg2GdFloat = (C.GdFloat)(mass)
	
	C.cgo_callfn_GDExtensionSpxSpriteSetMass(arg0,arg1GdObj,arg2GdFloat,)
	
	
}
function CallSpriteGetMass(
	obj GdObj,
	) GdFloat {
	arg0 := (C.GDExtensionSpxSpriteGetMass)(api.SpxSpriteGetMass)
	arg1GdObj = (C.GdObj)(obj)
	var ret_val C.GdFloat 
	C.cgo_callfn_GDExtensionSpxSpriteGetMass(arg0,arg1GdObj, &ret_val)
	
	return (GdFloat)(ret_val)
}
function CallSpriteAddForce(
	obj GdObj,
	force GdVec2,
	)  {
	arg0 := (C.GDExtensionSpxSpriteAddForce)(api.SpxSpriteAddForce)
	arg1GdObj = (C.GdObj)(obj)
	arg2GdVec2 = (C.GdVec2)(force)
	
	C.cgo_callfn_GDExtensionSpxSpriteAddForce(arg0,arg1GdObj,arg2GdVec2,)
	
	
}
function CallSpriteAddImpulse(
	obj GdObj,
	impulse GdVec2,
	)  {
	arg0 := (C.GDExtensionSpxSpriteAddImpulse)(api.SpxSpriteAddImpulse)
	arg1GdObj = (C.GdObj)(obj)
	arg2GdVec2 = (C.GdVec2)(impulse)
	
	C.cgo_callfn_GDExtensionSpxSpriteAddImpulse(arg0,arg1GdObj,arg2GdVec2,)
	
	
}
function CallSpriteSetCollisionLayer(
	obj GdObj,
	layer GdInt,
	)  {
	arg0 := (C.GDExtensionSpxSpriteSetCollisionLayer)(api.SpxSpriteSetCollisionLayer)
	arg1GdObj = (C.GdObj)(obj)
	arg2GdInt = (C.GdInt)(layer)
	
	C.cgo_callfn_GDExtensionSpxSpriteSetCollisionLayer(arg0,arg1GdObj,arg2GdInt,)
	
	
}
function CallSpriteGetCollisionLayer(
	obj GdObj,
	) GdInt {
	arg0 := (C.GDExtensionSpxSpriteGetCollisionLayer)(api.SpxSpriteGetCollisionLayer)
	arg1GdObj = (C.GdObj)(obj)
	var ret_val C.GdInt 
	C.cgo_callfn_GDExtensionSpxSpriteGetCollisionLayer(arg0,arg1GdObj, &ret_val)
	
	return (GdInt)(ret_val)
}
function CallSpriteSetCollisionMask(
	obj GdObj,
	mask GdInt,
	)  {
	arg0 := (C.GDExtensionSpxSpriteSetCollisionMask)(api.SpxSpriteSetCollisionMask)
	arg1GdObj = (C.GdObj)(obj)
	arg2GdInt = (C.GdInt)(mask)
	
	C.cgo_callfn_GDExtensionSpxSpriteSetCollisionMask(arg0,arg1GdObj,arg2GdInt,)
	
	
}
function CallSpriteGetCollisionMask(
	obj GdObj,
	) GdInt {
	arg0 := (C.GDExtensionSpxSpriteGetCollisionMask)(api.SpxSpriteGetCollisionMask)
	arg1GdObj = (C.GdObj)(obj)
	var ret_val C.GdInt 
	C.cgo_callfn_GDExtensionSpxSpriteGetCollisionMask(arg0,arg1GdObj, &ret_val)
	
	return (GdInt)(ret_val)
}
function CallSpriteSetTriggerLayer(
	obj GdObj,
	layer GdInt,
	)  {
	arg0 := (C.GDExtensionSpxSpriteSetTriggerLayer)(api.SpxSpriteSetTriggerLayer)
	arg1GdObj = (C.GdObj)(obj)
	arg2GdInt = (C.GdInt)(layer)
	
	C.cgo_callfn_GDExtensionSpxSpriteSetTriggerLayer(arg0,arg1GdObj,arg2GdInt,)
	
	
}
function CallSpriteGetTriggerLayer(
	obj GdObj,
	) GdInt {
	arg0 := (C.GDExtensionSpxSpriteGetTriggerLayer)(api.SpxSpriteGetTriggerLayer)
	arg1GdObj = (C.GdObj)(obj)
	var ret_val C.GdInt 
	C.cgo_callfn_GDExtensionSpxSpriteGetTriggerLayer(arg0,arg1GdObj, &ret_val)
	
	return (GdInt)(ret_val)
}
function CallSpriteSetTriggerMask(
	obj GdObj,
	mask GdInt,
	)  {
	arg0 := (C.GDExtensionSpxSpriteSetTriggerMask)(api.SpxSpriteSetTriggerMask)
	arg1GdObj = (C.GdObj)(obj)
	arg2GdInt = (C.GdInt)(mask)
	
	C.cgo_callfn_GDExtensionSpxSpriteSetTriggerMask(arg0,arg1GdObj,arg2GdInt,)
	
	
}
function CallSpriteGetTriggerMask(
	obj GdObj,
	) GdInt {
	arg0 := (C.GDExtensionSpxSpriteGetTriggerMask)(api.SpxSpriteGetTriggerMask)
	arg1GdObj = (C.GdObj)(obj)
	var ret_val C.GdInt 
	C.cgo_callfn_GDExtensionSpxSpriteGetTriggerMask(arg0,arg1GdObj, &ret_val)
	
	return (GdInt)(ret_val)
}
function CallSpriteSetColliderRect(
	obj GdObj,
	center GdVec2,
	size GdVec2,
	)  {
	arg0 := (C.GDExtensionSpxSpriteSetColliderRect)(api.SpxSpriteSetColliderRect)
	arg1GdObj = (C.GdObj)(obj)
	arg2GdVec2 = (C.GdVec2)(center)
	arg3GdVec2 = (C.GdVec2)(size)
	
	C.cgo_callfn_GDExtensionSpxSpriteSetColliderRect(arg0,arg1GdObj,arg2GdVec2,arg3GdVec2,)
	
	
	
}
function CallSpriteSetColliderCircle(
	obj GdObj,
	center GdVec2,
	radius GdFloat,
	)  {
	arg0 := (C.GDExtensionSpxSpriteSetColliderCircle)(api.SpxSpriteSetColliderCircle)
	arg1GdObj = (C.GdObj)(obj)
	arg2GdVec2 = (C.GdVec2)(center)
	arg3GdFloat = (C.GdFloat)(radius)
	
	C.cgo_callfn_GDExtensionSpxSpriteSetColliderCircle(arg0,arg1GdObj,arg2GdVec2,arg3GdFloat,)
	
	
	
}
function CallSpriteSetColliderCapsule(
	obj GdObj,
	center GdVec2,
	size GdVec2,
	)  {
	arg0 := (C.GDExtensionSpxSpriteSetColliderCapsule)(api.SpxSpriteSetColliderCapsule)
	arg1GdObj = (C.GdObj)(obj)
	arg2GdVec2 = (C.GdVec2)(center)
	arg3GdVec2 = (C.GdVec2)(size)
	
	C.cgo_callfn_GDExtensionSpxSpriteSetColliderCapsule(arg0,arg1GdObj,arg2GdVec2,arg3GdVec2,)
	
	
	
}
function CallSpriteSetCollisionEnabled(
	obj GdObj,
	enabled GdBool,
	)  {
	arg0 := (C.GDExtensionSpxSpriteSetCollisionEnabled)(api.SpxSpriteSetCollisionEnabled)
	arg1GdObj = (C.GdObj)(obj)
	arg2GdBool = (C.GdBool)(enabled)
	
	C.cgo_callfn_GDExtensionSpxSpriteSetCollisionEnabled(arg0,arg1GdObj,arg2GdBool,)
	
	
}
function CallSpriteIsCollisionEnabled(
	obj GdObj,
	) GdBool {
	arg0 := (C.GDExtensionSpxSpriteIsCollisionEnabled)(api.SpxSpriteIsCollisionEnabled)
	arg1GdObj = (C.GdObj)(obj)
	var ret_val C.GdBool 
	C.cgo_callfn_GDExtensionSpxSpriteIsCollisionEnabled(arg0,arg1GdObj, &ret_val)
	
	return (GdBool)(ret_val)
}
function CallSpriteSetTriggerRect(
	obj GdObj,
	center GdVec2,
	size GdVec2,
	)  {
	arg0 := (C.GDExtensionSpxSpriteSetTriggerRect)(api.SpxSpriteSetTriggerRect)
	arg1GdObj = (C.GdObj)(obj)
	arg2GdVec2 = (C.GdVec2)(center)
	arg3GdVec2 = (C.GdVec2)(size)
	
	C.cgo_callfn_GDExtensionSpxSpriteSetTriggerRect(arg0,arg1GdObj,arg2GdVec2,arg3GdVec2,)
	
	
	
}
function CallSpriteSetTriggerCircle(
	obj GdObj,
	center GdVec2,
	radius GdFloat,
	)  {
	arg0 := (C.GDExtensionSpxSpriteSetTriggerCircle)(api.SpxSpriteSetTriggerCircle)
	arg1GdObj = (C.GdObj)(obj)
	arg2GdVec2 = (C.GdVec2)(center)
	arg3GdFloat = (C.GdFloat)(radius)
	
	C.cgo_callfn_GDExtensionSpxSpriteSetTriggerCircle(arg0,arg1GdObj,arg2GdVec2,arg3GdFloat,)
	
	
	
}
function CallSpriteSetTriggerCapsule(
	obj GdObj,
	center GdVec2,
	size GdVec2,
	)  {
	arg0 := (C.GDExtensionSpxSpriteSetTriggerCapsule)(api.SpxSpriteSetTriggerCapsule)
	arg1GdObj = (C.GdObj)(obj)
	arg2GdVec2 = (C.GdVec2)(center)
	arg3GdVec2 = (C.GdVec2)(size)
	
	C.cgo_callfn_GDExtensionSpxSpriteSetTriggerCapsule(arg0,arg1GdObj,arg2GdVec2,arg3GdVec2,)
	
	
	
}
function CallSpriteSetTriggerEnabled(
	obj GdObj,
	trigger GdBool,
	)  {
	arg0 := (C.GDExtensionSpxSpriteSetTriggerEnabled)(api.SpxSpriteSetTriggerEnabled)
	arg1GdObj = (C.GdObj)(obj)
	arg2GdBool = (C.GdBool)(trigger)
	
	C.cgo_callfn_GDExtensionSpxSpriteSetTriggerEnabled(arg0,arg1GdObj,arg2GdBool,)
	
	
}
function CallSpriteIsTriggerEnabled(
	obj GdObj,
	) GdBool {
	arg0 := (C.GDExtensionSpxSpriteIsTriggerEnabled)(api.SpxSpriteIsTriggerEnabled)
	arg1GdObj = (C.GdObj)(obj)
	var ret_val C.GdBool 
	C.cgo_callfn_GDExtensionSpxSpriteIsTriggerEnabled(arg0,arg1GdObj, &ret_val)
	
	return (GdBool)(ret_val)
}
function CallUiCreateNode(
	path GdString,
	) GdObj {
	arg0 := (C.GDExtensionSpxUiCreateNode)(api.SpxUiCreateNode)
	arg1GdString = (C.GdString)(path)
	var ret_val C.GdObj 
	C.cgo_callfn_GDExtensionSpxUiCreateNode(arg0,arg1GdString, &ret_val)
	
	return (GdObj)(ret_val)
}
function CallUiCreateButton(
	path GdString,
	text GdString,
	) GdObj {
	arg0 := (C.GDExtensionSpxUiCreateButton)(api.SpxUiCreateButton)
	arg1GdString = (C.GdString)(path)
	arg2GdString = (C.GdString)(text)
	var ret_val C.GdObj 
	C.cgo_callfn_GDExtensionSpxUiCreateButton(arg0,arg1GdString,arg2GdString, &ret_val)
	
	
	return (GdObj)(ret_val)
}
function CallUiCreateLabel(
	path GdString,
	text GdString,
	) GdObj {
	arg0 := (C.GDExtensionSpxUiCreateLabel)(api.SpxUiCreateLabel)
	arg1GdString = (C.GdString)(path)
	arg2GdString = (C.GdString)(text)
	var ret_val C.GdObj 
	C.cgo_callfn_GDExtensionSpxUiCreateLabel(arg0,arg1GdString,arg2GdString, &ret_val)
	
	
	return (GdObj)(ret_val)
}
function CallUiCreateImage(
	path GdString,
	) GdObj {
	arg0 := (C.GDExtensionSpxUiCreateImage)(api.SpxUiCreateImage)
	arg1GdString = (C.GdString)(path)
	var ret_val C.GdObj 
	C.cgo_callfn_GDExtensionSpxUiCreateImage(arg0,arg1GdString, &ret_val)
	
	return (GdObj)(ret_val)
}
function CallUiCreateToggle(
	path GdString,
	value GdBool,
	) GdObj {
	arg0 := (C.GDExtensionSpxUiCreateToggle)(api.SpxUiCreateToggle)
	arg1GdString = (C.GdString)(path)
	arg2GdBool = (C.GdBool)(value)
	var ret_val C.GdObj 
	C.cgo_callfn_GDExtensionSpxUiCreateToggle(arg0,arg1GdString,arg2GdBool, &ret_val)
	
	
	return (GdObj)(ret_val)
}
function CallUiCreateSlider(
	path GdString,
	value GdFloat,
	) GdObj {
	arg0 := (C.GDExtensionSpxUiCreateSlider)(api.SpxUiCreateSlider)
	arg1GdString = (C.GdString)(path)
	arg2GdFloat = (C.GdFloat)(value)
	var ret_val C.GdObj 
	C.cgo_callfn_GDExtensionSpxUiCreateSlider(arg0,arg1GdString,arg2GdFloat, &ret_val)
	
	
	return (GdObj)(ret_val)
}
function CallUiCreateInput(
	path GdString,
	text GdString,
	) GdObj {
	arg0 := (C.GDExtensionSpxUiCreateInput)(api.SpxUiCreateInput)
	arg1GdString = (C.GdString)(path)
	arg2GdString = (C.GdString)(text)
	var ret_val C.GdObj 
	C.cgo_callfn_GDExtensionSpxUiCreateInput(arg0,arg1GdString,arg2GdString, &ret_val)
	
	
	return (GdObj)(ret_val)
}
function CallUiDestroyNode(
	obj GdObj,
	) GdBool {
	arg0 := (C.GDExtensionSpxUiDestroyNode)(api.SpxUiDestroyNode)
	arg1GdObj = (C.GdObj)(obj)
	var ret_val C.GdBool 
	C.cgo_callfn_GDExtensionSpxUiDestroyNode(arg0,arg1GdObj, &ret_val)
	
	return (GdBool)(ret_val)
}
function CallUiGetType(
	obj GdObj,
	) GdInt {
	arg0 := (C.GDExtensionSpxUiGetType)(api.SpxUiGetType)
	arg1GdObj = (C.GdObj)(obj)
	var ret_val C.GdInt 
	C.cgo_callfn_GDExtensionSpxUiGetType(arg0,arg1GdObj, &ret_val)
	
	return (GdInt)(ret_val)
}
function CallUiSetText(
	obj GdObj,
	text GdString,
	)  {
	arg0 := (C.GDExtensionSpxUiSetText)(api.SpxUiSetText)
	arg1GdObj = (C.GdObj)(obj)
	arg2GdString = (C.GdString)(text)
	
	C.cgo_callfn_GDExtensionSpxUiSetText(arg0,arg1GdObj,arg2GdString,)
	
	
}
function CallUiGetText(
	obj GdObj,
	) GdString {
	arg0 := (C.GDExtensionSpxUiGetText)(api.SpxUiGetText)
	arg1GdObj = (C.GdObj)(obj)
	var ret_val C.GdString 
	C.cgo_callfn_GDExtensionSpxUiGetText(arg0,arg1GdObj, &ret_val)
	
	return (GdString)(ret_val)
}
function CallUiSetTexture(
	obj GdObj,
	path GdString,
	)  {
	arg0 := (C.GDExtensionSpxUiSetTexture)(api.SpxUiSetTexture)
	arg1GdObj = (C.GdObj)(obj)
	arg2GdString = (C.GdString)(path)
	
	C.cgo_callfn_GDExtensionSpxUiSetTexture(arg0,arg1GdObj,arg2GdString,)
	
	
}
function CallUiGetTexture(
	obj GdObj,
	) GdString {
	arg0 := (C.GDExtensionSpxUiGetTexture)(api.SpxUiGetTexture)
	arg1GdObj = (C.GdObj)(obj)
	var ret_val C.GdString 
	C.cgo_callfn_GDExtensionSpxUiGetTexture(arg0,arg1GdObj, &ret_val)
	
	return (GdString)(ret_val)
}
function CallUiSetColor(
	obj GdObj,
	color GdColor,
	)  {
	arg0 := (C.GDExtensionSpxUiSetColor)(api.SpxUiSetColor)
	arg1GdObj = (C.GdObj)(obj)
	arg2GdColor = (C.GdColor)(color)
	
	C.cgo_callfn_GDExtensionSpxUiSetColor(arg0,arg1GdObj,arg2GdColor,)
	
	
}
function CallUiGetColor(
	obj GdObj,
	) GdColor {
	arg0 := (C.GDExtensionSpxUiGetColor)(api.SpxUiGetColor)
	arg1GdObj = (C.GdObj)(obj)
	var ret_val C.GdColor 
	C.cgo_callfn_GDExtensionSpxUiGetColor(arg0,arg1GdObj, &ret_val)
	
	return (GdColor)(ret_val)
}
function CallUiSetFontSize(
	obj GdObj,
	size GdInt,
	)  {
	arg0 := (C.GDExtensionSpxUiSetFontSize)(api.SpxUiSetFontSize)
	arg1GdObj = (C.GdObj)(obj)
	arg2GdInt = (C.GdInt)(size)
	
	C.cgo_callfn_GDExtensionSpxUiSetFontSize(arg0,arg1GdObj,arg2GdInt,)
	
	
}
function CallUiGetFontSize(
	obj GdObj,
	) GdInt {
	arg0 := (C.GDExtensionSpxUiGetFontSize)(api.SpxUiGetFontSize)
	arg1GdObj = (C.GdObj)(obj)
	var ret_val C.GdInt 
	C.cgo_callfn_GDExtensionSpxUiGetFontSize(arg0,arg1GdObj, &ret_val)
	
	return (GdInt)(ret_val)
}
function CallUiSetVisible(
	obj GdObj,
	visible GdBool,
	)  {
	arg0 := (C.GDExtensionSpxUiSetVisible)(api.SpxUiSetVisible)
	arg1GdObj = (C.GdObj)(obj)
	arg2GdBool = (C.GdBool)(visible)
	
	C.cgo_callfn_GDExtensionSpxUiSetVisible(arg0,arg1GdObj,arg2GdBool,)
	
	
}
function CallUiGetVisible(
	obj GdObj,
	) GdBool {
	arg0 := (C.GDExtensionSpxUiGetVisible)(api.SpxUiGetVisible)
	arg1GdObj = (C.GdObj)(obj)
	var ret_val C.GdBool 
	C.cgo_callfn_GDExtensionSpxUiGetVisible(arg0,arg1GdObj, &ret_val)
	
	return (GdBool)(ret_val)
}
function CallUiSetInteractable(
	obj GdObj,
	interactable GdBool,
	)  {
	arg0 := (C.GDExtensionSpxUiSetInteractable)(api.SpxUiSetInteractable)
	arg1GdObj = (C.GdObj)(obj)
	arg2GdBool = (C.GdBool)(interactable)
	
	C.cgo_callfn_GDExtensionSpxUiSetInteractable(arg0,arg1GdObj,arg2GdBool,)
	
	
}
function CallUiGetInteractable(
	obj GdObj,
	) GdBool {
	arg0 := (C.GDExtensionSpxUiGetInteractable)(api.SpxUiGetInteractable)
	arg1GdObj = (C.GdObj)(obj)
	var ret_val C.GdBool 
	C.cgo_callfn_GDExtensionSpxUiGetInteractable(arg0,arg1GdObj, &ret_val)
	
	return (GdBool)(ret_val)
}
function CallUiSetRect(
	obj GdObj,
	rect GdRect2,
	)  {
	arg0 := (C.GDExtensionSpxUiSetRect)(api.SpxUiSetRect)
	arg1GdObj = (C.GdObj)(obj)
	arg2GdRect2 = (C.GdRect2)(rect)
	
	C.cgo_callfn_GDExtensionSpxUiSetRect(arg0,arg1GdObj,arg2GdRect2,)
	
	
}
function CallUiGetRect(
	obj GdObj,
	) GdRect2 {
	arg0 := (C.GDExtensionSpxUiGetRect)(api.SpxUiGetRect)
	arg1GdObj = (C.GdObj)(obj)
	var ret_val C.GdRect2 
	C.cgo_callfn_GDExtensionSpxUiGetRect(arg0,arg1GdObj, &ret_val)
	
	return (GdRect2)(ret_val)
}